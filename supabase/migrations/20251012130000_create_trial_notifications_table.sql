-- Create a type for notification types for better type safety
CREATE TYPE public.trial_notification_type AS ENUM (
    'trial_ending_3_days',
    'trial_ending_1_day',
    'trial_expired_day_0'
);

-- Create the trial_notifications table
CREATE TABLE IF NOT EXISTS public.trial_notifications (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id uuid NOT NULL REFERENCES public.user_profiles(id) ON DELETE CASCADE,
    notification_type public.trial_notification_type NOT NULL,
    channel text NOT NULL CHECK (channel IN ('email', 'whatsapp')),
    sent_at timestamptz DEFAULT timezone('utc'::text, now()) NOT NULL,
    created_at timestamptz DEFAULT timezone('utc'::text, now()) NOT NULL
);

-- Add a unique constraint to prevent duplicate notifications
ALTER TABLE public.trial_notifications
ADD CONSTRAINT unique_user_notification_type UNIQUE (user_id, notification_type);

-- Add comments for clarity
COMMENT ON TABLE public.trial_notifications IS 'Logs reminder notifications sent to users during their trial period.';
COMMENT ON COLUMN public.trial_notifications.notification_type IS 'The type of trial reminder sent (e.g., 3 days left, 1 day left).';
