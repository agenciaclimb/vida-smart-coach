import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

dotenv.config();

const supabaseUrl = process.env.SUPABASE_URL || process.env.VITE_SUPABASE_URL;
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

if (!supabaseUrl || !supabaseServiceKey) {
  console.error('‚ùå Vari√°veis de ambiente faltando:');
  console.error('SUPABASE_URL:', supabaseUrl ? '‚úÖ' : '‚ùå');
  console.error('SUPABASE_SERVICE_ROLE_KEY:', supabaseServiceKey ? '‚úÖ' : '‚ùå');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseServiceKey);

const userId = '45ba22ad-4ba2-46a3-b827-ebe682a00e72'; // Jeferson
const phone = '5516981459950';

async function testSpecialistFlow() {
  console.log('üß™ Testando fluxo SDR ‚Üí Specialist ‚Üí Seller\n');

  // Simular hist√≥rico de conversa
  const testMessages = [
    { role: 'user', content: 'Oi, quero melhorar minha sa√∫de' },
    { role: 'assistant', content: 'Oi Jeferson! Como est√° sua rotina de sa√∫de hoje?' },
    { role: 'user', content: 'Est√° dif√≠cil, n√£o consigo manter consist√™ncia' },
    { role: 'assistant', content: 'Qual √© o maior desafio com sua rotina?' },
    { role: 'user', content: 'Falta de tempo e motiva√ß√£o' },
    { role: 'assistant', content: 'Como isso tem afetado seu dia a dia?' },
    { role: 'user', content: 'Me sinto cansado e sem energia' },
    { role: 'assistant', content: 'Quer conhecer uma solu√ß√£o personalizada para isso?' },
    { role: 'user', content: 'Sim, quero' }, // Deve avan√ßar para Specialist
  ];

  // 1. Avan√ßar para Specialist
  console.log('1Ô∏è‚É£ Avan√ßando para SPECIALIST...');
  await supabase.from('client_stages').insert({
    user_id: userId,
    current_stage: 'specialist',
    stage_metadata: { transitioned_from_sdr: true }
  });

  // 2. Testar Specialist com poucas perguntas
  console.log('2Ô∏è‚É£ Testando SPECIALIST (deve fazer 3-4 perguntas)...\n');
  
  const specialistMessages = [
    'Como est√° sua √°rea f√≠sica?',
    'Me sinto sedent√°rio',
    'E sua alimenta√ß√£o?',
    'Preciso melhorar muito',
    'Como est√° seu emocional?',
    'Um pouco estressado',
    'Quero ajuda com isso', // Deve avan√ßar para Seller
  ];

  const chatHistory = [];
  
  for (let i = 0; i < specialistMessages.length; i++) {
    const isUser = i % 2 === 0;
    const message = specialistMessages[i];
    
    if (isUser) {
      console.log(`üë§ Usu√°rio: "${message}"`);
      chatHistory.push({ role: 'user', content: message });
      
      // Chamar IA Coach
      const response = await fetch(`${supabaseUrl}/functions/v1/ia-coach-chat`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${supabaseServiceKey}`,
          'X-Internal-Secret': process.env.INTERNAL_FUNCTION_SECRET || ''
        },
        body: JSON.stringify({
          messageContent: message,
          userProfile: { 
            id: userId, 
            full_name: 'Jeferson Costa' 
          },
          chatHistory: chatHistory.slice()
        })
      });

      const data = await response.json();
      console.log(`ü§ñ IA (${data.stage}): "${data.reply}"`);
      console.log(`   Status: ${data.stage === 'seller' ? '‚úÖ AVAN√áOU PARA SELLER!' : '‚è≥ Ainda no Specialist'}\n`);
      
      chatHistory.push({ role: 'assistant', content: data.reply });

      if (data.stage === 'seller') {
        console.log('‚úÖ TESTE PASSOU! Specialist avan√ßou corretamente para Seller ap√≥s 3 perguntas.');
        break;
      }
    }
  }

  // Verificar est√°gio final
  const { data: finalStage } = await supabase
    .from('client_stages')
    .select('*')
    .eq('user_id', userId)
    .order('created_at', { ascending: false })
    .limit(1)
    .single();

  console.log('\nüìä Est√°gio final:', finalStage?.current_stage);
}

testSpecialistFlow().catch(console.error);
