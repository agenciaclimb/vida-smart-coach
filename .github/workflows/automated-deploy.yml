name: 🚀 Automated Deploy & Migrations

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
  SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
  SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  # Job 1: Executar migrações no Supabase
  migrate:
    name: 🗄️ Supabase Migrations
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: 🔗 Link to Supabase project
        run: |
          supabase link --project-ref ${{ env.SUPABASE_PROJECT_REF }}
        env:
          SUPABASE_ACCESS_TOKEN: ${{ env.SUPABASE_ACCESS_TOKEN }}

      - name: 🚀 Run migrations
        run: |
          supabase db push --include-all
        env:
          SUPABASE_ACCESS_TOKEN: ${{ env.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_DB_PASSWORD: ${{ env.SUPABASE_DB_PASSWORD }}

  # Job 2: Build e Deploy no Vercel
  deploy:
    name: 🌐 Vercel Deploy
    runs-on: ubuntu-latest
    needs: migrate
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📚 Install dependencies
        run: npm ci

      - name: 🏗️ Build application
        run: npm run build
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          VITE_APP_BASE_URL: https://www.appvidasmart.com
          VITE_APP_ENV: production

      - name: 🚀 Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ env.VERCEL_TOKEN }}
          vercel-org-id: ${{ env.VERCEL_ORG_ID }}
          vercel-project-id: ${{ env.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: ./

  # Job 3: Verificar saúde do sistema
  health-check:
    name: 🏥 Health Check
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: 🔍 Check website health
        run: |
          echo "Verificando saúde do site..."
          response=$(curl -s -o /dev/null -w "%{http_code}" https://www.appvidasmart.com)
          if [ $response -eq 200 ]; then
            echo "✅ Site está funcionando corretamente!"
          else
            echo "❌ Site retornou código: $response"
            exit 1
          fi

      - name: 🗄️ Check Supabase connection
        run: |
          echo "Verificando conexão com Supabase..."
          response=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "apikey: ${{ secrets.VITE_SUPABASE_ANON_KEY }}" \
            "${{ secrets.VITE_SUPABASE_URL }}/rest/v1/")
          if [ $response -eq 200 ]; then
            echo "✅ Supabase está funcionando corretamente!"
          else
            echo "❌ Supabase retornou código: $response"
            exit 1
          fi

  # Job 4: Notificação de sucesso
  notify:
    name: 📢 Success Notification
    runs-on: ubuntu-latest
    needs: [migrate, deploy, health-check]
    if: success()
    steps:
      - name: 🎉 Deploy Success
        run: |
          echo "🎉 Deploy automatizado concluído com sucesso!"
          echo "✅ Migrações aplicadas no Supabase"
          echo "✅ Aplicação deployada no Vercel"
          echo "✅ Health checks passaram"
          echo "🌐 Site disponível em: https://www.appvidasmart.com"

